version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      #      - run:
      #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
      #         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependenciess
          command: ./gradlew androidDependencies
      - run:
          name: building file
          command: ./gradlew assembleDebug;./gradlew assembleProductionDebugAndroidTest


      - run:
          name: Store Google Service Account
          command: echo "echo account"
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=gcloudwave.json
            sudo gcloud --quiet config set project wave-money-production
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run --app app/build/outputs/apk/production/debug/app-production-debug.apk  --test app/build/outputs/apk/androidTest/production/debug/app-production-debug-androidTest.apk --environment-variables MSISDN=$MSISDN,PIN=$PIN



      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}


      - store_artifacts:
          path: app/build/outputs/apk/debug
          destination: apkss

          #  /  - run:
          #        name: exec
          #        command: chmod +x upload;echo "upload"
          #    - run:
          #        name: Upload to Slack
          #        command: |
          #          curl -F file=@app/build/outputs/apk/production/debug/app-production-debug.apk -F "initial_comment=build finish" -F channels=testing -F token=$SLACK_TOKEN -F title="production app" https://slack.com/api/files.upload
          #          curl -F file=@app/build/outputs/apk/hongkong/debug/app-hongkong-debug.apk -F "initial_comment=build finish" -F channels=testing -F token=$SLACK_TOKEN  -F title="test app" https://slack.com/api/files.upload




          #    - store_test_results:
    #        path: app/build/test-results
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
